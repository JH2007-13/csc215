||| Chapter 1 |||
You communicate to this computer with a terminal - will also be called a console, screen CRT, VDT, CON, TTY
Terminal is composed of a monitor (which is also a type of program) and a keyboard
CP/M allows you to name programs and call programs by name
A small microcomputer system usually consists of a console terminal, computer with CPU and memory, a floppy disk system, and a line printer
Consoles started with a switches-and-lights system, but quickly evolved into teletype systems, such as the ASR-33
Early storage systems consisted of paper punch machines
A CPU (central processing unit) forms the basis of every computer, and it processes data from different parts of the computer
The Intel 8080 microprocessor's instruction set became standard for future projects in the industry. This is why the 8085 the book talks about runs with the same instruction set
The 8085 takes a 5-volt DC power source to use
Microprocessors are a integrated circuit (IC)
opcodes = operation codes
Programs are formatted in bytes
Small programs in read-only memory (ROM) allow you to automatically load a program without keying it in
Read-Write Memory (RAM) is used to process changes to bit patterns
A PROM (Programmable ROM) is an IC with no saved program, which you then hardcode a program into that cannot be removed
EPROMs (Erasable PROM) allow you to erase a program once it has been burned into the PROM
Process: a ROM with a loader program is stored in ROM, which reads the program into RAM, which then interacts with an I/O mass storage device
8085 microprocessor can address 65536 bytes of memory (64 Kilobytes)
Main storage on this machine is two floppy disks with between 70k and several million bytes
Data on floppy disks is broken into circular tracks, each with its own sector, which has an address
Data in sectors is broken into a string of data bytes, with the standard CP/M having 128 bytes per sector
CP/M takes care of most addressing tasks; all a programmer needs to know is the name of the file they want, and which drive it's on
TTY and similar machines print one character at a time, while traditional line printers store large amounts of data on buffers before printing it all out at once
CP/M assumes the use of a lower-level line printer
The way data used to be transferred between devices was that a floppy disk would have to be transported to a different device
CP/M also uses the names of these devices, like line printers, paper tape readers, and paper tape punchers
Computers in the time of the guide also used modems (essentially computer telephones) to communicate with each other

||| Chapter 2 |||
Core memory retains its contents, even if the power is cut. However, if a programming error erases it, a new loader program has to be manually inputted through a switches and lights console
For this reason, "bootstrap" loaders created to be extremely fast for this scenario - they would read in a better loader, which could then load in the main program
RAM memory, which made the jump from magnetic cores to semiconductors, has memory erased even with slight fluctiations in power
Companies started loading bootstraps onto ROMs, and more specifically EPROMs, which phased out switches and light consoles
"Software" includes components wiped out by RAM loss, while "firmware" includes programs burned into the ROM which are more permanent
When an 8080 microprocessor is reset, it jumps back to memory location zero for its first instruction
Read-write memory is also located in the lower memory end, so both the CPU and RAM look to memory location zero for their next steps
The same signal that resets the CPU also activates a bootup circuit, which replaces memory location 0 with a "shadow PROM", removing RAM in the process
The shadow PROM usually tells the computer to jump to the beginning of a monitor ROM program, located at the top of the main memory
The shadow PROM command places the ROM's address on the address bus, and afterwards the computer is told to replace the shadow PROM with the RAM
Although the address bus is a set of sixteen single lines (for bit patterns), the bootup program only needs the most significant bit
Monitor programs communicate with the user through a console
All the Monitor PROM does is read the bootstrap program from the disk, and runs the monitor if there is a disk error
All the bootstrap does is read the CP/M program from the disk, and runs the monitor if there is an error
The Dynamic Debugging Tool (DDT) allows you to initiate a mass program reset (you still need to flip the switch)
Before communicating with an output device, a computer must check if the connection is ready to accept information
Each computer has a different configuration for output ports, but CP/M can standardize it
In CP/M, function codes are passed in one register, while data and buffer addresses are passed in a different register
You can still use hardware-specific data addresses while coding, but that will mean your program is not portable
CP/M takes up 6k of old disk space
User programs in RAM are run in the TPA (transient program area)
User programs are called application programs, which will be changed using CP/M's editor (ED), assembler (ASM), loader (LOAD), and debugger (DDT), all of which also have to be loaded into the TPA
Only DDT will share main memory with the application programs, while CP/M's tools have to be loaded individually into the TPA
Vectors (at the lowest addresses in the RAM) store unconditional jump instructions, which the 8080 uses to store memory locations for hardware interrupts
In a CP/M operating system, RAM is composed of the monitor RAM, operating system, TPA, and there are several bytes for vectors and buffers (only 64 bytes for vectors)
The rest of the memory is composed of a very small monitor PROM and then unused address space
Monitor programs are very variable; some don't even need to exist, while others take up lots of space









